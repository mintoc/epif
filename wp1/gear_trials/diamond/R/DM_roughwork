##The first attempt is using just randomly generated data while the second uses some simulated data that has similar bounds as
##the gear trial data but warnings are still being produced.

##First Attempt - A version of this data was used to test the DM functions and worked. This is similar but has a larger number
##of observations
Y.dat <- t(rmultinom(100, size=50, prob=c(0.4, 0.2, 0.3, 0.1)))

x1 <- rnorm(nrow(Y))
x2 <- rnorm(nrow(Y))
X.mat <- cbind(1,x1,x2)

para <- ncol(Y)*ncol(X)
st.par<-rep(0, para)

off.mat <- cbind(rep(0.125, nrow(Y)), rep(0.25,nrow(Y)),rep(0.1,nrow(Y)),rep(0.5, nrow(Y)))

fit <- optim(par = st.par, Y = Y.dat, X = X.mat, off = off.mat, control = list(trace=1), fn = dm.nll.o, method = "BFGS")

##Second Attempt - Data more similar to that of the Gear Trials
x1 <- rep(seq(15, 55, by=1),length.out=100)
x2 <- x1^2
X.mat <- cbind(1,x1,x2)

fit <- optim(par = st.par, Y = Y.dat, X = X.mat, off = off.mat, control = list(trace=1), fn = dm.nll.o, method = "BFGS")

beta <- matrix(fit$par, ncol=ncol(Y))
eta <- X.mat %*% beta

p <- exp(eta)/rowSums(exp(eta))

## DIRICHLET-MULTINOMIAL PDF
ddm <- function(n, alpha, log = FALSE){
  ## calculates pdf on log-scale
  ## to deal with large numbers
  ## http://www2.math.su.se/matstat/reports/seriec/2014/rep6/report.pdf
  N <- sum(n)
  lpdf <- lfactorial(N) - sum(lfactorial(n)) + lgamma(sum(alpha)) - lgamma(sum(alpha + n)) + sum(lgamma(alpha + n) - lgamma(alpha))
  pdf <- exp(lpdf)
  if(log){
    return(lpdf)
  }else{
    return(pdf)
  }
}

## DIRICHLET-MULTINOMIAL NEGATIVE LOG-LIKELIHOOD
dm.nll.o <- function(theta, Y, X, off){
  ## note using ddm not ddm2
  npar <- ncol(Y) *  ncol(X)
  if(length(theta) != npar){
    stop("Number of parameters supplied incorrect")
  }
  ##
  beta <- matrix(theta, ncol = ncol(Y))
  ## linear predictor
  eta <- X %*% beta + log(off)
  ## alphas
  alpha <- exp(eta) ## see http://www2.math.su.se/matstat/reports/seriec/2014/rep6/report.pdf
  ## log-likelihood
  ## note doing this because ddm works on a vector not a matrix
  nll <- - sum(sapply(1:nrow(Y), function(z){
    ddm(n = Y[z,], alpha = alpha[z,], log = TRUE)
  }))
  ##print(nll)
  return(nll)
}

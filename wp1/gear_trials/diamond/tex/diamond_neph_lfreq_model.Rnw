%% knit("diamond_neph_lfreq_model.Rnw")

\documentclass[12pt]{article}
\usepackage{times}
\usepackage{hyperref}
\hypersetup{pdfpagemode=UseNone} % don't show bookmarks on initial view
\hypersetup{colorlinks, urlcolor={blue}}

% revise margins
\setlength{\headheight}{0.0in}
\setlength{\topmargin}{0.0in}
\setlength{\headsep}{0.0in}
\setlength{\textheight}{8.65in}
\setlength{\footskip}{0.35in}
\setlength{\oddsidemargin}{0.0in}
\setlength{\evensidemargin}{0.0in}
\setlength{\textwidth}{6.5in}

\setlength{\parskip}{6pt}
\setlength{\parindent}{0pt}

\title{A model for changes in length frequencies}
\author{}
\date{}

\begin{document}

<<echo=FALSE>>=
library(knitr)
opts_chunk$set(size="footnotesize")
## set the working directory
##setwd('../tex'); 
@

\maketitle

\section{Data}
Read in length data and modify some column names and variable labels for use below.

<<tidy=TRUE, eval = TRUE, warning = FALSE>>=
library(gdata)

setwd("../data")

neph.dat <- read.xls("Celtic Warrior Diamond mesh July 2014 Celtic Sea.xls", 
                     sheet = "Nephrops Lengths",
                     stringsAsFactors = FALSE)

## Show the first 2 rows
head(neph.dat, 2)

## Change the carapace length name
names(neph.dat)[names(neph.dat) == "Carapace.Length..mm.."] <- "Carapace.Length"

## Make the "HAUL" variable character
neph.dat$HAUL <- paste("H", neph.dat$HAUL, sep ="")
@
%% 
Make one row per length measurement assuming, for example, that a sub-sampling ratio of 0.1 corresponds to 10\% of the catch sampled (CHECK).

<<tidy=TRUE>>=
## get a row per length measurement (raise them also)
n <- nrow(neph.dat)

neph.dat2 <- neph.dat[rep(1:n, times = round(neph.dat$COUNT/neph.dat$SUBSRATIO, 0)), ]
@
%% 
Read in the haul weights
<<tidy=TRUE, eval = TRUE>>=
setwd("../data")

weight.dat <- read.xls("Celtic Warrior Diamond mesh July 2014 Celtic Sea.xls", 
                       sheet = "Weights",
                       stringsAsFactors = FALSE)

## Show the first 2 rows
head(weight.dat, 2)

## create a new "HAUL" variable for the merge
weight.dat$HAUL <- paste("H", weight.dat$Haul.., sep ="")

## re-name total weight column
names(weight.dat)[names(weight.dat) == "Total.weight..kg."] <- "Total.Weight"
@

Merge the bulk weights with the length data
<<tidy = TRUE, eval = TRUE>>=
neph.dat3 <- merge(neph.dat2, 
                   subset(weight.dat, Species == "Bulk")[, c("Mesh.Size", "HAUL", "Total.Weight")],
                   by = c("Mesh.Size", "HAUL"))

## subset the data by mesh size
neph.70mm <- subset(neph.dat3, Mesh.Size == "70mm")
neph.80mm <- subset(neph.dat3, Mesh.Size == "80mm")
neph.90mm <- subset(neph.dat3, Mesh.Size == "90mm")
neph.100mm <- subset(neph.dat3, Mesh.Size == "100mm")

## convert HAUL to factor
## with levels depending on the haul weight
neph.70mm$HAUL <- factor(neph.70mm$HAUL,
                         levels = unique(neph.70mm$HAUL[order(neph.70mm$Total.Weight)]))
neph.80mm$HAUL <- factor(neph.80mm$HAUL,
                         levels = unique(neph.80mm$HAUL[order(neph.80mm$Total.Weight)]))
neph.90mm$HAUL <- factor(neph.90mm$HAUL,
                         levels = unique(neph.90mm$HAUL[order(neph.90mm$Total.Weight)]))
neph.100mm$HAUL <- factor(neph.100mm$HAUL,
                         levels = unique(neph.100mm$HAUL[order(neph.100mm$Total.Weight)]))
@ 


%% 
Produce a summary plot of the data by length, haul and catch weight.
%%
<<fig.width = 5, fig.height = 8, fig.align = "center", warning = FALSE, eval = TRUE, fig.cap = "Stacked carapace length densities. Each haul is coloured according to the total bulk weight in that haul.">>=
library(ggplot2)
library(gridExtra)

## quick function for plot
plot.lfreq <- function(data, title.string){
  p <- ggplot(data, aes(x = Carapace.Length, group = HAUL)) + 
    geom_density(position = "stack", aes(fill = Total.Weight), colour = 1, lwd = 0.01) + 
      xlim(10, 45) + scale_fill_gradient2(low = "white", high = "blue", limits = c(0, max(neph.dat3$Total.Weight))) + ggtitle(title.string) +
        theme(axis.text.x=element_blank())
  return(p)
}

p70mm <- plot.lfreq(neph.70mm, "70mm")
p80mm <- plot.lfreq(neph.80mm, "80mm")
p90mm <- plot.lfreq(neph.90mm, "90mm")
p100mm <- plot.lfreq(neph.100mm, "100mm")

grid.arrange(p70mm, p80mm, p90mm, p100mm, ncol = 1)
@

\end{document}
